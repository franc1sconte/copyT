name: Run Cypress por ambiente + Reporte HTML

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Seleccionar entorno"
        required: true
        default: "Produ"
        type: choice
        options:
          - Staging
          - Produ

jobs:
  cypress-run:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Configurar variables según entorno
        id: set-env
        run: |
          echo "Entorno seleccionado: ${{ github.event.inputs.environment }}"
          if [ "${{ github.event.inputs.environment }}" == "Staging" ]; then
            echo "BASE_URL=${{ secrets.BASE_URL_STAGING }}" >> $GITHUB_ENV
          else
            echo "BASE_URL=${{ secrets.BASE_URL_PRODU }}" >> $GITHUB_ENV
          fi

      - name: Ejecutar Cypress
        env:
          USER_ID_2: ${{ secrets.USER_ID_2 }}
          USER_NAME_2: ${{ secrets.USER_NAME_2 }}
          USER_EMAIL_2: ${{ secrets.USER_EMAIL_2 }}
          USER_AVATAR_2: ${{ secrets.USER_AVATAR_2 }}
          USER_TOKEN_2: ${{ secrets.USER_TOKEN_2 }}
          USER_ID_1: ${{ secrets.USER_ID_1 }}
          USER_NAME_1: ${{ secrets.USER_NAME_1 }}
          USER_EMAIL_1: ${{ secrets.USER_EMAIL_1 }}
          USER_AVATAR_1: ${{ secrets.USER_AVATAR_1 }}
          USER_TOKEN_1: ${{ secrets.USER_TOKEN_1 }}
          IS_AUTHENTICATED: ${{ secrets.IS_AUTHENTICATED }}
          WAS_ON_BOARDED: ${{ secrets.WAS_ON_BOARDED }}
          BASE_URL: ${{ env.BASE_URL }}
        run: |
          npm ci
          npm run clean:reports
          npx cypress run --browser chrome

      - name: Generar carpeta public con reportes HTML
        if: always()
        run: |
          set -eux
          echo "Listando archivos de reports (cypress/reports) antes de copiar"
          ls -la cypress/reports || true
          mkdir -p public
          # Copiamos todos los HTML generados por el reporter al directorio public
          cp cypress/reports/*.html public/ || true
          # Si tu reporter genera carpetas con assets (js/css/screenshots), cópialas también
          if [ -d "cypress/reports/assets" ]; then
            cp -r cypress/reports/assets public/ || true
          fi
          echo "Contenido de public/ creado:"
          ls -la public || true

      - name: Subir Pages artifact
        if: always()
        uses: actions/upload-pages-artifact@v3
        with:
          path: public

      - name: Subir reporte como artifact (backup)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: cypress-html-reports
          path: cypress/reports

  deploy-report:
    needs: cypress-run
    permissions:
      pages: write
      id-token: write
    runs-on: ubuntu-latest

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

